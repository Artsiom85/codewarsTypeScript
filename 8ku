1.//This kata is about multiplying a given number by eight if it is an even number and by nine otherwise.

export const simpleMultiplication = (num: number): number =>
  num * (num % 2 === 0 ? 8 : 9);

____________________________________________________________________________________________________________________________________________________________________

2.//Remove First and Last Character
//Your goal is to create a function that removes the first and last characters of a string. 
//You're given one parameter, the original string. You don't have to worry with strings with less than two characters.


export function removeChar(str: string): string {
  // You got this!
  return str.substring(1, str.length - 1);
}

or

export function removeChar(str: string): string {
  return str.slice(1,-1);
}
____________________________________________________________________________________________________________________________________________________________________

3.//Build a function that returns an array of integers from n to 1 where n>0.
//Example : n=5 --> [5,4,3,2,1]
export const reverseSeq = (n: number): number[] => {
  var reverse = [];
  for(let i = n; i > 0; i--){
    reverse.push(i);
  }
  
  return reverse;
};
____________________________________________________________________________________________________________________________________________________________________

4. //Your start-up's BA has told marketing that your website has a large audience in Scandinavia and surrounding countries. Marketing thinks it would be great to welcome visitors to the site in their own language. Luckily you already use an API that detects the user's location, so this is an easy win.
//Think of a way to store the languages as a database (eg an object). The languages are listed below so you can copy and paste!
//Write a 'welcome' function that takes a parameter 'language' (always a string), and returns a greeting - if you have it in your database. It should default to English if the language is not in the database, or in the event of an invalid input.

export function greet(language: string): string {
  const languages: any = {
    english: 'Welcome',
    czech: 'Vitejte',
    danish: 'Velkomst',
    dutch: 'Welkom',
    estonian: 'Tere tulemast',
    finnish: 'Tervetuloa',
    flemish: 'Welgekomen',
    french: 'Bienvenue',
    german: 'Willkommen',
    irish: 'Failte',
    italian: 'Benvenuto',
    latvian: 'Gaidits',
    lithuanian: 'Laukiamas',
    polish: 'Witamy',
    spanish: 'Bienvenido',
    swedish: 'Valkommen',
    welsh: 'Croeso'
  };
  
  if (languages[language]) return languages[language];
  return languages['english']
}
____________________________________________________________________________________________________________________________________________________________________

5.//In this simple exercise, you will build a program that takes a value, integer , and returns a list of its multiples up to another value, limit . If limit is a multiple of integer, it should be included as well. There will only ever be positive integers passed into the function, not consisting of 0. The limit will always be higher than the base.
//For example, if the parameters passed are (2, 6), the function should return [2, 4, 6] as 2, 4, and 6 are the multiples of 2 up to 6.

export function findMultiples(integer: number, limit: number): number[] {
  const multiples: number[] = [];

  for (let i = integer; i <= limit; i += integer) {
    multiples.push(i);
  }

  return multiples;
}
____________________________________________________________________________________________________________________________________________________________________
//Remove duplicates from the list

6. Define a function that removes duplicates from an array of non negative numbers and returns it as a result.

The order of the sequence has to stay the same.

Examples:

Input -> Output
[1, 1, 2] -> [1, 2]
[1, 2, 1, 1, 3, 2] -> [1, 2, 3]

export const distinct = (a: number[]): number[] => {
  const uniqueNumbers = new Set<number>();
  const result: number[] = [];

  for (const num of a) {
    if (!uniqueNumbers.has(num)) {
      uniqueNumbers.add(num);
      result.push(num);
    }
  }

  return result;
};
or

export const distinct = (a: number[]): number[] => {
  return [...new Set(a)];
}

____________________________________________________________________________________________________________________________________________________________________
7. Double Char

Given a string, you have to return a string in which each character (case-sensitive) is repeated once.

Examples (Input -> Output):
* "String"      -> "SSttrriinngg"
* "Hello World" -> "HHeelllloo  WWoorrlldd"
* "1234!_ "     -> "11223344!!__  "

export function doubleChar(str: string): string{
  let result = "";
  for (const char of str){
    result += char + char
  }
  return result;
}
____________________________________________________________________________________________________________________________________________________________________
8.Input: Array of elements

["h","o","l","a"]

Output: String with comma delimited elements of the array in th same order.

"h,o,l,a"

export function printArray(arr: any[]){
  return arr.join();
}
____________________________________________________________________________________________________________________________________________________________________
9. Given an array of integers your solution should find the smallest integer.

For example:

Given [34, 15, 88, 2] your solution will return 2
Given [34, -345, -1, 100] your solution will return -345
You can assume, for the purpose of this kata, that the supplied array will not be empty.


export function findSmallestInt(args: number[]): number {
  return Math.min(...args);
}
____________________________________________________________________________________________________________________________________________________________________
